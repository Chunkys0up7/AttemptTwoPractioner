[pytest]
pythonpath = .:c:\projects\AttemptTwoPractioner\mcp_project_backend
testpaths = 
    tests/api
    tests/config
    tests/data
    tests/reports
    tests/root
    tests/scripts
    tests/utils
    tests/e2e
    tests/performance
    tests/accessibility
    tests/integration
    tests/unit
    tests/api/middleware/test_security_middleware_temp.py

# Python files to consider as tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    accessibility: Accessibility tests
    smoke: Smoke tests
    regression: Regression tests
    slow: Slow tests
    flaky: Flaky tests
    external: Tests that require external services

# Addopts
addopts =
    -v
    --tb=short
    --import-mode=importlib
    --cov=mcp
    --cov-report=html:tests/reports/coverage
    --cov-report=term-missing
    --cov-report=xml:tests/reports/coverage/coverage.xml
    --junit-xml=tests/reports/junit.xml
    --cache-dir=tests/cache
    --random-order
    --random-order-seed=42

# Environment variables
env =
    TESTING=true
    PYTHONPATH={PYTHONPATH}:{rootdir}
    TEST_ENV={rootdir}/tests/test_env
    TEST_DATA_DIR={rootdir}/tests/data
    TEST_REPORTS_DIR={rootdir}/tests/reports
    RATE_LIMIT_MAX_REQUESTS=100
    RATE_LIMIT_WINDOW=60
    SECURITY_KEY=test-secret-key
    SECURITY_ALGORITHM=HS256
    SECURITY_TOKEN_EXPIRE_MINUTES=30
    DATABASE_URL=sqlite:///./test.db
    API_BASE_URL=http://localhost:8000
    API_TIMEOUT=30
    API_MAX_RETRIES=3
    LOG_LEVEL=INFO
    COVERAGE_DIR={rootdir}/tests/reports/coverage
    COVERAGE_MIN=80.0
    PERFORMANCE_MAX_REQUESTS=1000
    PERFORMANCE_WINDOW=60
    PERFORMANCE_TARGET_RPS=100.0
    DATABASE_URL=sqlite:///./test.db
    API_BASE_URL=http://localhost:8000
    API_TIMEOUT=30
    API_MAX_RETRIES=3
    LOG_LEVEL=INFO
    COVERAGE_DIR={rootdir}/tests/reports/coverage
    COVERAGE_MIN=80.0
    PERFORMANCE_MAX_REQUESTS=1000
    PERFORMANCE_WINDOW=60
    PERFORMANCE_TARGET_RPS=100.0    TESTING=true
    PYTHONPATH={PYTHONPATH}:{rootdir}
    TEST_ENV={rootdir}/tests/test_env
    TEST_DATA_DIR={rootdir}/tests/data
    TEST_REPORTS_DIR={rootdir}/tests/reports
    RATE_LIMIT_MAX_REQUESTS=100
    RATE_LIMIT_WINDOW=60

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
log_file = tests/reports/logs/test.log
log_file_level = DEBUG

# Test execution
asyncio_mode = auto
norecursedirs = 
    venv
    .venv
    __pycache__
    .pytest_cache
    .tox
    node_modules
    .git
    .husky
    .cursor

# Test collection
python_functions = test_*
python_classes = Test*

# Test reporting
junit_family = xunit2
junit_suite_name = MCP Tests
junit_properties = true

# Test timeout
timeout = 300

# Test isolation
usefixtures = test_settings

# Test setup
setupcfg = true

# Test plugins
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test coverage configuration
coverage_source = mcp
coverage_omit = 
    mcp/__init__.py
    mcp/core/config.py
    mcp/core/exceptions.py
    mcp/core/middleware.py
    mcp/core/utils.py
omit =
    tests/*
    */__init__.py
    */__main__.py
    */settings.py
    */conftest.py
    */test_*.py
    */__pycache__/*
    */.pytest_cache/*
    */.venv/*
    */.git/*
    */dist/*
    */build/*
    */test_env/*
