[pytest]
# Python path configuration
pythonpath =
    ..
    ../mcp_project_backend

testpaths =
    .

# File patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Default options
addopts =
    -v  # Verbose output
    -s  # Don't capture stdout/stderr
    --tb=short  # Show short tracebacks
    --import-mode=importlib  # Use importlib for imports
    -p no:importlib  # Disable importlib plugin
    -p no:pytester  # Disable pytester plugin
    -p no:cacheprovider  # Disable cache plugin
    --no-header  # Disable header output
    --no-summary  # Disable summary output

# Test markers
markers =
    unit: Mark test as a unit test
    integration: Mark test as an integration test
    security: Mark test as a security test
    monitoring: Mark test as a monitoring test
    performance: Mark test as a performance test
    flaky: Mark test as potentially flaky

# Coverage configuration
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s - %(levelname)s - %(message)s

# Test execution
testpaths =
    tests/api
    tests/core
    tests/utils
    tests/integration

# Plugin configuration
addopts =
    --asyncio-mode=auto  # Enable asyncio support
    --cov=mcp  # Enable coverage reporting
    --cov-report=term-missing  # Show missing lines in coverage report
    --cov-report=xml  # Generate XML coverage report
    --cov-report=html  # Generate HTML coverage report
