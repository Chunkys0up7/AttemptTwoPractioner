[pytest]
# Python path configuration
pythonpath =
    ..
    ../mcp_project_backend

# Test paths
testpaths =
    tests/unit/services
    tests/unit/security
    tests/unit/utils
    tests/unit/models
    tests/integration/api
    tests/integration/services
    tests/e2e/workflows
    tests/performance/workflows
    tests/security/middleware
    tests/api/routes
    tests/utils/validation

# File patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_.*

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_.*

# Default options
addopts = 
    -v 
    -s 
    --tb=short 
    --import-mode=importlib 
    --cov=mcp 
    --cov-report=term-missing 
    --cov-report=xml 
    --cov-report=html
    --asyncio-mode=auto
    --random-order
    --random-order-seed=42
    --log-cli-level=DEBUG
    --log-cli-format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    --log-cli-date-format="%Y-%m-%d %H:%M:%S"
    --log-file=tests/reports/logs/test_run.log
    --log-file-level=DEBUG
    --log-file-format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    --log-file-date-format="%Y-%m-%d %H:%M:%S"

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    smoke: Smoke tests
    regression: Regression tests
    slow: Slow tests
    flaky: Flaky tests
    external: External tests

# Logging configuration
log_cli = true
log_cli_level = DEBUG
log_cli_format = 
    %(asctime)s - 
    %(levelname)s - 
    %(name)s - 
    %(message)s

# Environment variables
env = 
    TESTING=true
    PYTHONPATH={PYTHONPATH}:{rootdir}
    TEST_ENV={rootdir}/tests/test_env
    TEST_DATA_DIR={rootdir}/tests/data
    TEST_REPORTS_DIR={rootdir}/tests/reports
    RATE_LIMIT_MAX_REQUESTS=100
    RATE_LIMIT_WINDOW=60
    SECURITY_KEY=test-secret-key
    SECURITY_ALGORITHM=HS256
    SECURITY_TOKEN_EXPIRE_MINUTES=30
    DATABASE_URL=sqlite:///./test.db
    API_BASE_URL=http://localhost:8000
    API_TIMEOUT=30
    API_MAX_RETRIES=3
    LOG_LEVEL=DEBUG
    COVERAGE_DIR={rootdir}/tests/reports/coverage
    COVERAGE_MIN=80.0
    PERFORMANCE_MAX_REQUESTS=1000
    PERFORMANCE_WINDOW=60
    PERFORMANCE_TARGET_RPS=100.0
    PYTEST_PLUGINS=pytest-random-order,pytest-cov,pytest-asyncio,pytest-env


# Default options
addopts = 
    -v 
    -s 
    --tb=short 
    --import-mode=importlib 
    --cov=mcp 
    --cov-report=term-missing 
    --cov-report=xml 
    --cov-report=html
    --asyncio-mode=auto
    --random-order
    --random-order-seed=42

# Test markers
markers =
    unit: Mark test as a unit test
    integration: Mark test as an integration test
    security: Mark test as a security test
    monitoring: Mark test as a monitoring test
    performance: Mark test as a performance test
    flaky: Mark test as potentially flaky

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = 
    %(asctime)s - 
    %(levelname)s - 
    %(name)s - 
    %(message)s

# Environment variables
env = 
    TESTING=true
    PYTHONPATH={PYTHONPATH}:{rootdir}
    TEST_ENV={rootdir}/tests/test_env
    TEST_DATA_DIR={rootdir}/tests/data
    TEST_REPORTS_DIR={rootdir}/tests/reports
    RATE_LIMIT_MAX_REQUESTS=100
    RATE_LIMIT_WINDOW=60
    SECURITY_KEY=test-secret-key
    SECURITY_ALGORITHM=HS256
    SECURITY_TOKEN_EXPIRE_MINUTES=30
    DATABASE_URL=sqlite:///./test.db
    API_BASE_URL=http://localhost:8000
    API_TIMEOUT=30
    API_MAX_RETRIES=3
    LOG_LEVEL=INFO
    COVERAGE_DIR={rootdir}/tests/reports/coverage
    COVERAGE_MIN=80.0
    PERFORMANCE_MAX_REQUESTS=1000
    PERFORMANCE_WINDOW=60
    PERFORMANCE_TARGET_RPS=100.0
