"""create_external_database_configs_table

Revision ID: 42601a77e740
Revises: 12345abcdef0
Create Date: YYYY-MM-DD HH:MM:SS.MS

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql  # For UUID type

# revision identifiers, used by Alembic.
revision = '42601a77e740'
down_revision = '12345abcdef0'  # Set this to your previous migration's ID
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('external_database_configs',
                    sa.Column('id', postgresql.UUID(
                        as_uuid=True), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False,
                              comment='User-defined name for this database configuration.'),
                    sa.Column('description', sa.Text(), nullable=True,
                              comment='Optional description for this configuration.'),
                    sa.Column('db_type', sa.String(length=50), nullable=False,
                              comment="Type of the database (e.g., 'postgresql', 'mysql', 'bigquery')."),
                    sa.Column('host', sa.String(length=255), nullable=True,
                              comment='Database host address.'),
                    sa.Column('port', sa.Integer(), nullable=True,
                              comment='Database port number.'),
                    sa.Column('username', sa.String(length=255), nullable=True,
                              comment='Username for database authentication.'),
                    sa.Column('password_secret_key', sa.String(length=255), nullable=True,
                              comment='Key or reference to the password/secret in a secrets manager.'),
                    sa.Column('database_name', sa.String(length=255), nullable=True,
                              comment='Name of the specific database/schema to connect to.'),
                    sa.Column('additional_configs', sa.Text(), nullable=True,
                              comment='JSON string for additional type-specific configurations, e.g., BigQuery project_id, GCS path for service account key.'),
                    sa.PrimaryKeyConstraint('id', name=op.f(
                        'pk_external_database_configs')),
                    sa.UniqueConstraint('name', name=op.f(
                        'uq_external_database_configs_name'))
                    )
    op.create_index(op.f('ix_external_database_configs_db_type'),
                    'external_database_configs', ['db_type'], unique=False)
    op.create_index(op.f('ix_external_database_configs_name'),
                    'external_database_configs', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_external_database_configs_name'),
                  table_name='external_database_configs')
    op.drop_index(op.f('ix_external_database_configs_db_type'),
                  table_name='external_database_configs')
    op.drop_table('external_database_configs')
    # ### end Alembic commands ###
