"""add template_shares, metrics, alerts, workflow_step_executions tables

Revision ID: 0de67490053f
Revises: 79ab2f2dcb3f
Create Date: 2025-06-07 16:50:29.486073

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0de67490053f'
down_revision = '79ab2f2dcb3f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('metric_name', sa.String(length=255), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('comparison', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alerts'))
    )
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alerts_name'), ['name'], unique=False)

    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('labels', sa.JSON(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_metrics'))
    )
    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_metrics_name'), ['name'], unique=False)

    op.create_table('template_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('permission', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['workflow_templates.id'], name=op.f('fk_template_shares_template_id_workflow_templates')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_template_shares_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_template_shares'))
    )
    op.create_table('workflow_step_executions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_run_id', sa.UUID(), nullable=False),
    sa.Column('step_id_in_graph', sa.String(), nullable=False),
    sa.Column('mcp_version_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('inputs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('outputs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mcp_version_id'], ['mcp_versions.id'], name=op.f('fk_workflow_step_executions_mcp_version_id_mcp_versions')),
    sa.ForeignKeyConstraint(['workflow_run_id'], ['workflow_runs.id'], name=op.f('fk_workflow_step_executions_workflow_run_id_workflow_runs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_step_executions'))
    )
    with op.batch_alter_table('workflow_step_executions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workflow_step_executions_workflow_run_id'), ['workflow_run_id'], unique=False)

    with op.batch_alter_table('workflow_definitions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('version', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('updated_by', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        batch_op.alter_column('graph_representation',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
        batch_op.create_index('idx_workflow_created_by', ['created_by'], unique=False)
        batch_op.create_index('idx_workflow_name_version', ['name', 'version'], unique=False)
        batch_op.create_index('idx_workflow_updated_by', ['updated_by'], unique=False)

    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.Text(), nullable=True))
        batch_op.alter_column('started_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_column('run_parameters')
        batch_op.drop_column('logs')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('run_parameters', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.alter_column('started_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('error_message')
        batch_op.drop_column('parameters')

    with op.batch_alter_table('workflow_definitions', schema=None) as batch_op:
        batch_op.drop_index('idx_workflow_updated_by')
        batch_op.drop_index('idx_workflow_name_version')
        batch_op.drop_index('idx_workflow_created_by')
        batch_op.alter_column('graph_representation',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
        batch_op.drop_column('is_active')
        batch_op.drop_column('updated_by')
        batch_op.drop_column('created_by')
        batch_op.drop_column('version')

    with op.batch_alter_table('workflow_step_executions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workflow_step_executions_workflow_run_id'))

    op.drop_table('workflow_step_executions')
    op.drop_table('template_shares')
    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_metrics_name'))

    op.drop_table('metrics')
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alerts_name'))

    op.drop_table('alerts')
    # ### end Alembic commands ###
