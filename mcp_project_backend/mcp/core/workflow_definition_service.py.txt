# mcp/core/workflow_definition_service.py
# This file contains the service layer logic for managing WorkflowDefinitions and WorkflowSteps.
# It acts as an intermediary between the API layer and the CRUD layer.
# Responsibilities:
# - Business logic for creating, updating, and managing workflows and their steps.
# - Ensuring referential integrity (e.g., steps point to valid MCPVersions).
# - Validating workflow structure (e.g., DAG checks if applicable, though complex).

# from sqlalchemy.orm import Session
# from typing import List, Optional
# from mcp.db.crud import crud_workflow_definition, crud_workflow_step # Assuming crud_workflow_step
# from mcp.db.models import WorkflowDefinition, WorkflowStep, MCPVersion
# from mcp.schemas import workflow_definition_schemas

# class WorkflowDefinitionService:
#     def __init__(self, db_session: Session):
#         self.db_session = db_session

#     async def create_workflow_definition(
#         self,
#         wf_def_in: workflow_definition_schemas.WorkflowDefinitionCreate,
#         owner_id: int
#     ) -> WorkflowDefinition:
#         # Validate that all mcp_version_ids in steps are valid and exist
#         if wf_def_in.steps:
#             for step_in in wf_def_in.steps:
#                 mcp_version = self.db_session.query(MCPVersion).get(step_in.mcp_version_id)
#                 if not mcp_version:
#                     raise ValueError(f"MCPVersion with id {step_in.mcp_version_id} not found for step '{step_in.name}'.")
#         # The CRUD operation will handle creating the definition and its steps in a transaction.
#         return crud_workflow_definition.create_with_steps(
#             db=self.db_session, obj_in=wf_def_in, owner_id=owner_id
#         ) # Assumes crud_workflow_definition has such a method

#     async def get_workflow_definition(self, definition_id: int) -> Optional[WorkflowDefinition]:
#         return crud_workflow_definition.get(self.db_session, id=definition_id)

    # Add other service methods for updating, deleting, listing workflows, managing steps.
